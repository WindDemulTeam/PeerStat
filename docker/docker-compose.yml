version: "3.9"

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    logging:
     driver: "json-file"
     options:
       max-size: "10M"
       max-file: "5"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  postgres:
    container_name: postgres
    image: postgres:latest
    logging:
     driver: "json-file"
     options:
       max-size: "10M"
       max-file: "5"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      DATABASE_URL: "jdbc:postgresql://postgres:5432/postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
        - "5432:5432"
    volumes:
      - ./db-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    container_name: ReactJS
    logging:
     driver: "json-file"
     options:
       max-size: "10M"
       max-file: "5"
    build:
      context: ../frontend
      dockerfile: ../frontend/Dockerfile
    environment:
      REACT_APP_API_ADDR: /api
    volumes:
      - ./frontend:/app/build
    command: sh -c "cd /app && npm run build"

  backend:
    container_name: java
    logging:
     driver: "json-file"
     options:
       max-size: "10M"
       max-file: "5"
    build:
      context: ../backend
      dockerfile: ../backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_HOSTNAME: "postgres"
      FULLLOGIN: ""          # FULLLOGIN: format: nickname@student.21-school.ru
      LOGIN: ""                                   # LOGIN: format: nickname
      PASSWORD: ""                                # PASSWORD
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped

  certbot:
    container_name: certbot
    image: certbot/certbot
    networks:
      - app-network
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

networks:
  app-network:
    name: app-network
